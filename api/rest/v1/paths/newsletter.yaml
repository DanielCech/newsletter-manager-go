Newsletters:
  get:
    description: The list of author's newsletters
    tags:
      - newsletter
    operationId: authorsNewsletters
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of author's newsletters
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/newsletter.yaml#/Newsletter'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
  post:
    description: Creates a new newsletter.
    tags:
      - newsletter
    operationId: createNewsletter
    security:
      - bearerAuth: [ ]
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../schemas/newsletter.yaml#/CreateNewsletterReq'
      required: true
    responses:
      200:
        description: A new newsletter
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/newsletter.yaml#/Newsletter'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
Newsletter:
  delete:
    description: Delete the newsletter
    tags:
      - newsletter
    operationId: deleteNewsletter
    security:
      - bearerAuth: [ ]
    parameters:
      - name: newsletterId
        in: path
        description: ID of the newsletter
        required: true
        schema:
          type: string
          format: uuid
    responses:
      "204":
        description: Newsletter deleted
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A newsletter with the same id already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
  get:
    description: Get newsletter by ID
    tags:
      - newsletter
    operationId: getNewsletter
    security:
      - bearerAuth: [ ]
    parameters:
      - name: newsletterId
        in: path
        description: ID of the newsletter
        required: true
        schema:
          type: string
          format: uuid
    responses:
      "201":
        description: Newsletter with current ID
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/newsletter.yaml#/Newsletter'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
  patch:
    description: Update newsletter
    tags:
      - newsletter
    operationId: updateNewsletter
    security:
      - bearerAuth: [ ]
    parameters:
      - name: newsletterId
        in: path
        description: ID of the newsletter
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '../schemas/newsletter.yaml#/CreateNewsletterReq'
    responses:
      "201":
        description: Successfully created newsletter
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/newsletter.yaml#/Newsletter'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A newsletter with the same email already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
ListNewsletters:
  get:
    description: The list of all newsletters
    tags:
      - newsletter
    operationId: ListNewsletters
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of author's newsletters
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/newsletter.yaml#/Newsletter'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'