Newsletters:
  get:
    description: (TODO:) The list of author's newsletters
    tags:
      - newsletter
    operationId: authorsNewsletters
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of authors
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
  post:
    description: (TODO:) Creates a new newsletter.
    tags:
      - newsletter
    operationId: createNewsletter
    security:
      - bearerAuth: [ ]
    responses:
      200:
        description: List of authors
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
Newsletter:
  delete:
    description: (TODO:) Delete the newsletter
    tags:
      - newsletter
    operationId: deleteNewsletter
    security:
      - bearerAuth: [ ]
    parameters:
      - name: newsletterId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    responses:
      "201":
        description: Successfully created author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/CreateAuthorResp'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A author with the same email already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
  get:
    description: (TODO:) Get newsletter by ID
    tags:
      - newsletter
    operationId: getNewsletter
    parameters:
      - name: newsletterId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    responses:
      "201":
        description: Successfully created author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/CreateAuthorResp'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A author with the same email already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
  patch:
    description: (TODO:) Update newsletter
    tags:
      - newsletter
    operationId: updateNewsletter
    security:
      - bearerAuth: [ ]
    parameters:
      - name: newsletterId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '../schemas/author.yaml#/CreateAuthorInput'
    responses:
      "201":
        description: Successfully created author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/CreateAuthorResp'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A author with the same email already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
