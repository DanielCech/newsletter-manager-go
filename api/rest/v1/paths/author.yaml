Authors:
  get:
    description: (TODO:) Returns the list of all authors
    tags:
      - author
    operationId: listOfAllAuthors
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of authors
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
Author:
  get:
    description: (TODO:) Get author by ID
    tags:
      - author
    operationId: getAuthor
    security:
      - bearerAuth: [ ]
    parameters:
      - name: authorId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
  delete:
    description: (TODO:) Delete the author
    tags:
      - author
    operationId: deleteAuthor
    security:
      - bearerAuth: [ ]
    parameters:
      - name: authorId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Author
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
  patch:
    description: (TODO:) Update author data
    tags:
      - author
    operationId: updateAuthor
    security:
      - bearerAuth: [ ]
    parameters:
      - name: authorId
        in: path
        description: ID of the author
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Author
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
AuthorSignUp:
  post:
    description: Author sign-up
    tags:
      - session
    operationId: authorSignUp
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../schemas/author.yaml#/CreateAuthorInput'
      required: true
    security:
      - bearerAuth: [ ]
    responses:
      200:
        description: Author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/CreateAuthorResp'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
ChangeAuthorPassword:
  patch:
    description: Change author password. All author's sessions are destroyed.
    tags:
      - v1/authors
    operationId: changeAuthorPassword
    security:
      - bearerAuth: []
    requestBody:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '../schemas/author.yaml#/ChangeAuthorPasswordInput'
      required: true
    responses:
      "204":
        description: Author password has been changed
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "404":
        description: Author not found
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'
ReadCurrentAuthor:
  get:
    description: Get the current author
    tags:
      - author
    operationId: getCurrentAuthor
    security:
      - bearerAuth: [ ]
    responses:
      200:
        description: Author
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/author.yaml#/Author'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'