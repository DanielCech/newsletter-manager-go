Subscribe:
  post:
    description: Subscribe to newsletter
    tags:
      - subscription
    operationId: subscribeToNewsletter
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of users
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/user.yaml#/User'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
Unsubscribe:
  post:
    description: Unsubscribe from newsletter
    tags:
      - subscription
    operationId: umsubscribeFromNewsletter
    security:
      - bearerAuth: []
    responses:
      200:
        description: List of users
        content:
          application/json; charset=utf-8:
            schema:
              type: array
              items:
                $ref: '../schemas/user.yaml#/User'
      "401":
        $ref: '../schemas/common.yaml#/UnauthenticatedError'
      "403":
        $ref: '../schemas/common.yaml#/ForbiddenError'
NewsletterSubscriptions:
  get:
    description: Newsletter's subscriptions
    tags:
      - subscription
    operationId: getSubscriptions
    requestBody:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '../schemas/user.yaml#/CreateUserInput'
    responses:
      "201":
        description: Successfully created user
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/user.yaml#/CreateUserResp'
      "400":
        $ref: '../schemas/common.yaml#/BadRequestError'
      "409":
        description: A user with the same email already exists
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '../schemas/common.yaml#/APIError'
      "422":
        $ref: '../schemas/common.yaml#/InvalidBodyError'